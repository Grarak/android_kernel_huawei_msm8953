#ifndef __BFI_PUBLIC_INTERFACE_H__
#define __BFI_PUBLIC_INTERFACE_H__
enum PLATFORM_CODE{
    COMMON_PLATFORM = 0,
    HISI_PLATFORM,
    QUALCOMM_PLATFORM,
};
enum STAGE_CODE{
    PBL_STAGE =0,
    BL1_STAGE,
    BL2_STAGE,
    KERNEL_STAGE,
    NATIVE_STAGE,
    ANDROID_FRAMEWORK_STAGE,
};

enum BFI_ERRNO_CODE {
    BOOT_NO_ERROR = 0,
    BL1_ERRNO_START = (BL1_STAGE <<24) |(COMMON_PLATFORM<<16),  /* BL1 -- bootloader stage 1, it's xloader for hisi, sbl1 for qualcomm*/


    BL1_PL1_START = (BL1_STAGE <<24) | (HISI_PLATFORM<<16), /* PL1 -- Platform 1 -- it's only for hisi */
    BL1_DDR_INIT_FAIL,
    BL1_EMMC_INIT_FAIL,
    BL1_BL2_LOAD_FAIL,
    BL1_BL2_VERIFY_FAIL,
    BL1_WDT,
    BL1_VRL_LOAD_FAIL,
    BL1_VRL_VERIFY_FAIL,

    BL1_PL2_START = (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16), /* PL2 -- Platform 2 -- it's only for qualcomm */
    BL1_ERROR_GROUP_FATAL			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0000,
    BL1_ERROR_GROUP_BOOT 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0100,
    BL1_ERROR_GROUP_BUSES 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0200,
    BL1_ERROR_GROUP_BAM 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0300,
    BL1_ERROR_GROUP_BUSYWAIT 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0400,
    BL1_ERROR_GROUP_CLK 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0500,
    BL1_ERROR_GROUP_CRYPTO 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0600,
    BL1_ERROR_GROUP_DAL 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0700,
    BL1_ERROR_GROUP_DEVPROG 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x0800,
    BL1_ERROR_GROUP_DEVPROG_DDR 	= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1000,
    BL1_ERROR_GROUP_EFS 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1100,
    BL1_ERROR_GROUP_EFS_LITE 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1200,
    BL1_ERROR_GROUP_FLASH 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1300,
    BL1_ERROR_GROUP_HOTPLUG 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1400,
    BL1_ERROR_GROUP_HSUSB 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1500,
    BL1_ERROR_GROUP_ICB				= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1600,
    BL1_ERROR_GROUP_LIMITS 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1700,
    BL1_ERROR_GROUP_MHI 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x1800,
    BL1_ERROR_GROUP_PCIE 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2000,
    BL1_ERROR_GROUP_PLATFORM 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2100,
    BL1_ERROR_GROUP_PMIC 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2200,
    BL1_ERROR_GROUP_POWER 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2300,
    BL1_ERROR_GROUP_PRNG			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2400,
    BL1_ERROR_GROUP_QUSB 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2500,
    BL1_ERROR_GROUP_SECIMG 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2600,
    BL1_ERROR_GROUP_SECBOOT 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2700,
    BL1_ERROR_GROUP_SECCFG 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x2800,
    BL1_ERROR_GROUP_SMEM 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3000,
    BL1_ERROR_GROUP_SPMI			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3100,
    BL1_ERROR_GROUP_SUBSYS 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3200,
    BL1_ERROR_GROUP_TLMM 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3300,
    BL1_ERROR_GROUP_TSENS 			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3400,
    BL1_ERROR_GROUP_HWENGINES		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3500,
    BL1_ERROR_GROUP_IMAGE_VERSION	= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3600,
    BL1_ERROR_GROUP_SECURITY 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3700,
    BL1_ERROR_GROUP_STORAGE 		= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x3800,
    BL1_ERROR_GROUP_SYSTEMDRIVERS = (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x4000,
    BL1_ERROR_GROUP_DDR			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x4100,
    BL1_ERROR_GROUP_EXCEPTIONS	= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x4200,
    BL1_ERROR_GROUP_MPROC			= (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16) | 0x4300,

    BL2_ERRNO_START = (BL2_STAGE <<24) | (COMMON_PLATFORM<<16),  /* BL2 -- bootloader stage 2, it's fastboot for hisi, lk for qualcomm*/


    BL2_PL1_START = (BL2_STAGE <<24) | (HISI_PLATFORM<<16), /* PL1 -- Platform 1 -- it's only for hisi */
    BL2_EMMC_INIT_FAIL,
    BL2_PANIC,
    BL2_WDT,
    BL2_OCV_ERROR,
    BL2_BAT_TEMP_ERROR,
    BL2_MISC_ERROR,
    BL2_DTIMG_ERROR,
    BL2_MODEM_IMG_ERROR,
    BL2_LPM_IMG_ERROR,
    BL2_HIFI_IMG_ERROR,
    BL2_IOM3_IMG_ERROR,
    BL2_TEEOS_IMG_ERROR,

    BL2_PL2_START = (BL2_STAGE <<24) | (QUALCOMM_PLATFORM<<16), /* PL2 -- Platform 2 -- it's only for qualcomm */
    BL2_MMC_INIT_FAILED,
    BL2_READ_PARTITION_ERR,
    BL2_QSEECOM_START_ERROR,
    BL2_RPMB_INIT_FAILED,
    BL2_LOAD_SECAPP_FAILED,
    BL2_ABOOT_NORMAL_BOOT_FAIL,
    BL2_ABOOT_WDOG_BARK,


    KERNEL_ERRNO_START = (KERNEL_STAGE <<24) | (COMMON_PLATFORM<<16),  /* kernel stage's bootFail errors */
    KERNEL_AP_PANIC,
    KERNEL_EMMC_INIT_FAIL,
    KERNEL_AP_WDT,
    KERNEL_PRESS10S,
    KERNEL_BOOT_TIMEOUT,
    KERNEL_AP_COMBINATIONKEY,


    KERNEL_PL1_START = (KERNEL_STAGE <<24) | (HISI_PLATFORM<<16),
    KERNEL_AP_S_ABNORMAL,
    KERNEL_AP_S_TSENSOR0,
    KERNEL_AP_S_TSENSOR1,
    KERNEL_LPM3_S_GLOBALWDT,
    KERNEL_G3D_S_G3DTSENSOR,
    KERNEL_LPM3_S_LPMCURST,
    KERNEL_CP_S_CPTSENSOR,
    KERNEL_IOM3_S_IOMCURST,
    KERNEL_ASP_S_ASPWD,
    KERNEL_CP_S_CPWD,
    KERNEL_IVP_S_IVPWD,
    KERNEL_ISP_S_ISPWD,
    KERNEL_AP_S_DDR_SELFREFLASH,
    KERNEL_AP_S_DDR_FATAL_INTER,
    KERNEL_AP_S_DDR_SEC,
    KERNEL_AP_S_GPIO,
    KERNEL_AP_S_DIE,
    KERNEL_CP_S_MODEMAP,
    KERNEL_CP_S_EXCEPTION,
    KERNEL_CP_S_RESETFAIL,
    KERNEL_CP_S_NORMALRESET,
    KERNEL_CP_S_ABNORMAL,
    KERNEL_LPM3_S_EXCEPTION,
    KERNEL_HIFI_S_EXCEPTION,
    KERNEL_HIFI_S_RESETFAIL,
    KERNEL_ISP_S_EXCEPTION,
    KERNEL_IVP_S_EXCEPTION,
    KERNEL_IOM3_S_EXCEPTION,
    KERNEL_TEE_S_EXCEPTION,
    KERNEL_MMC_S_EXCEPTION,

    KERNEL_PL2_START = (KERNEL_STAGE <<24) | (QUALCOMM_PLATFORM<<16),

    NATIVE_ERRNO_START = (NATIVE_STAGE <<24) | (COMMON_PLATFORM<<16),  /* natvie stage's bootFail errors */
    SYSTEM_MOUNT_FAIL,
    SECURITY_FAIL,
    CRITICAL_SERVICE_FAIL_TO_START,
    DATA_MOUNT_FAILED_AND_ERASED,

    ANDROID_FRAMEWORK_ERRNO_START = (ANDROID_FRAMEWORK_STAGE <<24) | (COMMON_PLATFORM<<16),  /* android frameworkl stage's bootFail errors */
    SYSTEM_SERVICE_LOAD_FAIL,
    PREBOOT_BROADCAST_FAIL,
    VM_OAT_FILE_DAMAGED,
    PACKAGE_MANAGER_SETTING_FILE_DAMAGED,

};
#define isBootSuccess(x) (x == STAGE_BOOT_SUCCESS)
#define isBL1Stage(x)  ((x>>24) ==  BL1_STAGE)
#define isBL2Stage(x)  ((x>>24) ==  BL2_STAGE)
#define isKernelStage(x) ((x>>24) ==  KERNEL_STAGE)
#define isNativeStage(x) ((x>>24) ==  NATIVE_STAGE)
#define isAndroidFrameworkStage(x) ((x>>24) == ANDROID_FRAMEWORK_STAGE)

#define isCoverBL1Stage(x)  ((x>>24) >=  BL1_STAGE)
#define isCoverBL2Stage(x)  ((x>>24) >=  BL2_STAGE)
#define isCoverKernelStage(x) ((x>>24) >=  KERNEL_STAGE)

enum BFI_BOOT_STAGE_CODE {

    BL1_PL1_STAGE_START = (BL1_STAGE <<24) | (HISI_PLATFORM<<16),
    BL1_PL1_STAGE_DDR_INIT_START,
    BL1_PL1_STAGE_EMMC_INIT_START,
    BL1_PL1_STAGE_BL2_LOAD_START,
    BL1_PL1_STAGE_VRL_LOAD_START,
    BL1_PL1_STAGE_END,

    BL1_PL2_STAGE_START = (BL1_STAGE <<24) | (QUALCOMM_PLATFORM<<16),
    BL1_PL2_STAGE_AUTH_QSEE,
    BL1_PL2_STAGE_LOG_DDR,
    BL1_PL2_STAGE_AUTH_DEVCFG,
    BL1_PL2_STAGE_AUTH_DBG_POLICY,
    BL1_PL2_STAGE_AUTH_RPM_FW,
    BL1_PL2_STAGE_AUTH_APP_SBL,
    BL1_PL2_STAGE_END,

    BL2_PL1_STAGE_START = (BL2_STAGE <<24) | (HISI_PLATFORM<<16),
    BL2_PL1_STAGE_EMMC_INIT_START,
    BL2_PL1_STAGE_EMMC_FAIL,
    BL2_PL1_STAGE_EMMC_OK,
    BL2_PL1_STAGE_LCD_INIT,
    BL2_PL1_STAGE_PRE_BOOT,
    BL2_PL1_STAGE_CHECK_POWER_STATE,
    BL2_PL1_STAGE_ENTER_SHUTDOWN_MODE,
    BL2_PL1_STAGE_ENTER_FASTBOOT_MODE,
    BL2_PL1_STAGE_NORMAL_BOOT_INIT,
    BL2_PL1_STAGE_DEAD_LOOP,
    BL2_PL1_STAGE_END,

    BL2_PL2_STAGE_START = (BL2_STAGE <<24) | (QUALCOMM_PLATFORM<<16),
    BL2_PL2_STAGE_AFTER_THREAD_INIT,
    BL2_PL2_STAGE_ARM_MMU_INIT_ENTRY,
    BL2_PL2_STAGE_PLATFORM_INIT_MMU_MAPPINGS_ENTRY,
    BL2_PL2_STAGE_PLATFORM_INIT_MMU_MAPPINGS_EXIT,
    BL2_PL2_STAGE_ARM_MMU_INIT_EXIT,
    BL2_PL2_STAGE_AFTER_ARCH_EARLY_INIT,
    BL2_PL2_STAGE_PLATFORM_DETECT_ENTRY,
    BL2_PL2_STAGE_PLATFORM_DETECT_EXIT,
    BL2_PL2_STAGE_PLATFORM_CLOCK_INIT_COMPLETE,
    BL2_PL2_STAGE_PLATFORM_EARLY_INIT_COMPLETE,
    BL2_PL2_STAGE_AFTER_PLATFORM_EARLY_INIT,
    BL2_PL2_STAGE_INITIALIZING_PLATFORM,
    BL2_PL2_STAGE_INITIALIZING_TARGET,
    BL2_PL2_STAGE_CALLING_APPS_INIT,
    BL2_PL2_STAGE_ABOOT_INIT_START,
    BL2_PL2_STAGE_CHECK_NORMAL_BOOT,
    BL2_PL2_STAGE_CHECK_DDR_SCREEN,
    BL2_PL2_STAGE_START_FASTBOOT,
    BL2_PL2_STAGE_END,


    KERNEL_STAGE_START = (KERNEL_STAGE <<24) | (COMMON_PLATFORM<<16), /* kernel stage */
    KERNEL_EARLY_INITCALL,
    KERNEL_PURE_INITCALL,
    KERNEL_CORE_INITCALL_SYNC,
    KERNEL_POSTCORE_INITCALL,
    KERNEL_POSTCORE_INITCALL_SYNC,
    KERNEL_ARCH_INITCALL,
    KERNEL_ARCH_INITCALLC,
    KERNEL_SUBSYS_INITCALL,
    KERNEL_SUBSYS_INITCALL_SYNC,
    KERNEL_FS_INITCALL,
    KERNEL_FS_INITCALL_SYNC,
    KERNEL_ROOTFS_INITCALL,
    KERNEL_DEVICE_INITCALL,
    KERNEL_DEVICE_INITCALL_SYNC,
    KERNEL_LATE_INITCALL,
    KERNEL_LATE_INITCALL_SYNC,
    KERNEL_CONSOLE_INITCALL,
    KERNEL_SECURITY_INITCALL,

    NATIVE_STAGE_START = (NATIVE_STAGE <<24) | (COMMON_PLATFORM<<16), /* native stage */
    STAGE_INIT_START,
    STAGE_ON_EARLY_INIT,
    STAGE_ON_INIT,
    STAGE_ON_EARLY_FS,
    STAGE_ON_FS,
    STAGE_ON_POST_FS,
    STAGE_ON_POST_FS_DATA,
    STAGE_ON_EARLY_BOOT,
    STAGE_ON_BOOT,

    ANDROID_FRAMEWORK_STAGE_START = (ANDROID_FRAMEWORK_STAGE <<24) | (COMMON_PLATFORM<<16), /* android framework start stage */
    STAGE_ZYGOTE_START,
    STAGE_VM_START,
    STAGE_PHASE_WAIT_FOR_DEFAULT_DISPLAY,
    STAGE_PHASE_LOCK_SETTINGS_READY,
    STAGE_PHASE_SYSTEM_SERVICES_READY,
    STAGE_PHASE_ACTIVITY_MANAGER_READY,
    STAGE_PHASE_THIRD_PARTY_APPS_CAN_START,

    STAGE_BOOT_SUCCESS = 0x7FFFFFFF,

};
#define MAX_LOGPATH 1024
enum SUGGESTED_RECOVERED_METHOD{
    NO_SUGGESTION = 0x0,
    DO_NOTHING = 0x1,
};


#endif

